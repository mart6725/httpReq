{"ast":null,"code":"import _classCallCheck from \"C:\\\\projects\\\\udemy\\\\angular13\\\\httpReq\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projects\\\\udemy\\\\angular13\\\\httpReq\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var PostsService = /*#__PURE__*/(function () {\n  var PostsService = /*#__PURE__*/function () {\n    function PostsService(http) {\n      _classCallCheck(this, PostsService);\n\n      this.http = http;\n      this.error = new Subject();\n    } // injectime http clienti ja yleval impordime                                                 \n\n\n    _createClass(PostsService, [{\n      key: \"onCreatePost\",\n      value: function onCreatePost(postData) {\n        var _this = this;\n\n        // Send Http request\n        return this.http // postime ja m22rame millisena tagastatakse  \n        .post('https://angularcourse-bdbe7-default-rtdb.europe-west1.firebasedatabase.app/posts.json', //1. argument on URL, endpoint lisatud\n        postData, {\n          observe: 'response' // 3. millist datat tagasi saame                                                           \n\n        }).subscribe(function (responseData) {\n          console.log(responseData); // tegemist observablega\n        }, function (error) {\n          _this.error.next(error.message);\n        });\n      }\n    }, {\n      key: \"fetchPosts\",\n      value: function fetchPosts() {\n        // returnime observable millele app.componendis subscribeme\n        return this.http.get('https://angularcourse-bdbe7-default-rtdb.europe-west1.firebasedatabase.app/posts.json', //<> vahel\n        //tagastus tyyp\n        {\n          headers: new HttpHeaders({\n            \"Custom-Header\": 'Hello'\n          }),\n          params: new HttpParams().set('print', 'pretty') // lisame URLI paramsid juurde\n\n        }).pipe(map(function (responseData) {\n          var postArray = [];\n\n          for (var key in responseData) {\n            // loopime yle responsedata ja lykkame meie arraysse\n            if (responseData.hasOwnProperty(key)) {\n              postArray.push(Object.assign(Object.assign({}, responseData[key]), {\n                id: key\n              })); // 3 puntki on spread operaator, mis t6mbab v2lja nested objektist\n            } // key value paarid, p2rast koma saame juurde lisada\n            // id sisse s2ilitame objekti cryptic key, et vajadusel kasutada\n\n          }\n\n          return postArray;\n        }));\n      }\n    }, {\n      key: \"deletePost\",\n      value: function deletePost() {\n        return this.http.delete('https://angularcourse-bdbe7-default-rtdb.europe-west1.firebasedatabase.app/posts.json', {\n          observe: 'events',\n          responseType: 'json'\n        }).pipe(tap(function (event) {\n          console.log(event);\n\n          if (event.type === HttpEventType.Sent) {\n            console.log(event);\n          }\n\n          if (event.type === HttpEventType.Response) {\n            console.log(event.body);\n          }\n        }));\n      }\n    }]);\n\n    return PostsService;\n  }();\n\n  PostsService.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostsService;\n})();","map":null,"metadata":{},"sourceType":"module"}